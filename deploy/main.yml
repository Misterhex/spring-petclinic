---
# connector deployment

- name: deploys the application
  hosts: localhost
  connection: local
  become: false
  gather_facts: false

  tasks:
  - name: Create a new instance 
    os_server:
       state: present
       auth:
         auth_url: http://192.168.0.140:35357/v3
         username: pbuditi
         password: password
         project_name: fintech
         domain_name: default
       name: "{{app_name}}_{{ app_env }}"
       availability_zone: nova
       image: 7e9a5b89-a071-4ae7-8d84-b004e4630997
       key_name: pradeep
       security_groups: default
       timeout: 200
       flavor: 130402d3-ab31-4072-8cf4-894c6362fe01
       nics:
         - net-id: af40bd17-70a4-41cb-801c-f7fe4f4bafb3
         - net-name: provider
       meta:
         hostname: "{{app_name}}_{{ app_env }}"
       userdata: |
          {%- raw -%}#!/bin/bash
          apt-get update && sudo apt-get upgrade
          apt-get install -y python
          apt-get install -y default-jre
          {% endraw %}
    register: newnodes

  - name: Add  Instance to Inventory
    add_host: name={{ newnodes.server.public_v4 }}
        groups=created_nodes
        ansible_user=ubuntu
        instance_name={{ newnodes.server.name }}
        
  - set_fact: var_hostname="{{ newnodes.server.name }}" var_hostip="{{ newnodes.server.public_v4 }}"

- name: deploys the application
  hosts: created_nodes
  become: yes
  become_method: sudo
  gather_facts: false
      
  vars:
    timestamp: ""

  tasks:
  - name: "Wait for Cloud init to complete"
    local_action: wait_for port=22 host="{{ inventory_hostname }}" search_regex=SSH delay=15
    become: False
  
  - name: create the app directory
    file: path=/home/cloud-user/petclinic state=directory
      
  - name: copies the startup script
    copy: src=start-app.sh dest=/home/cloud-user/petclinic
      
  - name: copies the stop script
    copy: src=stop-app.sh dest=/home/cloud-user/petclinic
      
  - name: copies the jar file over
    copy: src=../target/spring-petclinic-1.0-SNAPSHOT.jar dest=/home/cloud-user/petclinic/spring-petclinic-1.0-SNAPSHOT-.jar

  - name: unlink the current app
    file: path=/home/cloud-user/petclinic/spring-petclinic-1.0-SNAPSHOT.jar state=absent

  - name: link to the newly deployed app
    file: path=/home/cloud-user/petclinic/spring-petclinic-1.0-SNAPSHOT.jar src=/home/cloud-user/petclinic/spring-petclinic-1.0-SNAPSHOT-.jar state=link

  - name: stops running app
    command: /bin/sh /home/cloud-user/petclinic/stop-app.sh
    args:
      chdir: /home/cloud-user/petclinic/

  - name: starts the app
    shell: /bin/sh /home/cloud-user/petclinic/start-app.sh
    args:
       chdir: /home/cloud-user/petclinic/
        
  - name: Send notification message via Slack all options
    slack:
       token: "T02592CKJ/B5NSGD0Q4/HVtCwONm8vSrFayNVOLZnudT"
       msg: "{{ app_name }}-{{ app_env }} deployment completed: http://{{ inventory_hostname }}:8099"
       username: 'PaloIT DevOps'
